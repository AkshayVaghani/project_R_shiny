mode = 'markers')
p
p <- plot_ly(data = inspectionsFiltered,type = 'scatter', x = ~rating,
y = ~score, color = ~boro, colors = pal,
text = paste("Name: ",rownames(~name),
"<br>cuisine: ",~cuisine,
"<br>grade: ",~grade),
hoverinfo = 'text',
mode = 'markers')
p
p <- plot_ly(data = inspectionsFiltered,type = 'scatter', x = ~rating,
y = ~score, color = ~boro, colors = pal,
text = paste("Make: ",rownames(inspectionsFiltered),
"<br>cuisine: ",inspectionsFiltered$cuisine,
"<br>grade: ",inspectionsFiltered$grade),
hoverinfo = 'text',
mode = 'markers')
p
p <- plot_ly(data = inspectionsFiltered,type = 'scatter', x = ~rating,
y = ~score, color = ~boro, colors = pal,
text = paste("Make: ",rownames(inspectionsFiltered$name),
"<br>cuisine: ",inspectionsFiltered$cuisine,
"<br>grade: ",inspectionsFiltered$grade),
hoverinfo = 'text',
mode = 'markers')
p
p <- plot_ly(data = inspectionsFiltered,type = 'scatter', x = ~rating,
y = ~score, color = ~boro, colors = pal,
text = paste("Make: ",inspectionsFiltered$name,
"<br>cuisine: ",inspectionsFiltered$cuisine,
"<br>grade: ",inspectionsFiltered$grade),
hoverinfo = 'text',
mode = 'markers')
p
pal <- c("red","blue","green","orange","yellow")
pal <- setNames(pal, c("BRONX", "BROOKLYN", "MANHATTAN","QUEENS","STATEN ISLND"))
p <- plot_ly(data = inspectionsFiltered, x = ~rating, y = ~score, color = ~boro, colors = pal)
p <- plot_ly(data = inspectionsFiltered,type = 'scatter', x = ~rating,
y = ~score, color = ~boro, colors = pal,
text = paste("Name: ",inspectionsFiltered$name,
"<br>cuisine: ",inspectionsFiltered$cuisine,
"<br>grade: ",inspectionsFiltered$grade),
hoverinfo = 'text',
mode = 'markers')
p
p <- plot_ly(data=inspectionsFiltered, x = ~Cuisine, y = ~Restaurants, type = 'bar', name = 'BR') %>%
add_trace(y = ~Restaurants, name = 'RES') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p
p
p <- plot_ly(data=inspectionsFiltered, x = ~cuisine, y = ~Restaurants, type = 'bar', name = 'BR') %>%
add_trace(y = ~Restaurants, name = 'RES') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p
p <- plot_ly(data=inspections, x = ~boro, type = 'bar', name = 'BR') %>%
add_trace(y = ~Restaurants, name = 'RES') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p
p <- plot_ly(data=inspections, x = ~boro, type = 'bar', name = 'BR') %>%
add_trace(y = ~name, name = 'RES') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p
ggplot(data=inspections) +
geom_bar(aes(x=boro,fill=ratings1), position='dodge') +
labs(title='Restaurants by borough and ratings',
x='Borough',
y='Restaurants') +
scale_fill_brewer(palette='Set2') +
theme_bw() +
theme(legend.key=element_blank())
p <- inspections %>% count(boro) %>%
plot_ly(x = ~boro, y = ~n, color = ~ratings1)
p
p <- inspections %>% count(boro) %>%
plot_ly(x = ~boro, y = ~n, color = ~ratings)
p
p <- inspections %>% count(boro) %>%
plot_ly(x = ~boro, y = ~n, color = ~rating)
p
p <- inspections %>% count(boro) %>%
plot_ly(x = ~boro, y = ~n)
p
p <- inspections %>% count(boro,rating1) %>%
plot_ly(x = ~boro, y = ~n)
p
p <- inspections %>% count(boro,rating1) %>%
plot_ly(x = ~boro, y = ~n,color =~ratings1)
p
p <- inspections %>% count(boro,rating1) %>%
plot_ly(x = ~boro,color =~ratings1)
p
p <- inspections %>% count(boro,rating1) %>%
plot_ly(x = ~boro,y = ~np, color =~ratings1)
p
p <- inspections %>% count(boro,rating1) %>%
plot_ly(x = ~boro,y = ~n, color =~ratings1)
p
p <- inspections %>% count(boro,rating1) %>%
plot_ly(x = ~boro,y = ~n, type = 'bar',color =~ratings1)
p
p <- inspections %>% count(boro,rating1) %>%
plot_ly(x = ~boro, type = 'bar',color =~ratings1)
p
p <- plot_ly(data=inspections, x = ~boro, type = 'bar', name = 'BR') %>%
add_trace(y = ~name, name = 'RES') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p
p <- plot_ly(data=inspections, x = ~boro, type = 'bar', name = 'BR') %>%
add_trace(y = ~n, name = 'RES') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p
p <- inspections %>% count(boro,rating1) %>%
plot_ly(x = ~boro, type = 'bar',color =~ratings1)
p
p <- inspections %>% count(boro,rating1) %>%
plot_ly(x = ~boro, type = 'bar',color =~ratings1)
p
p <- inspections %>% count(boro,rating1) %>%
plot_ly(x = ~boro, type = 'bar',color =ratings1)
p
#Bar plot: Restaurants by borough and grade
ggplot(data=inspections) +
geom_bar(aes(x=boro,fill=grade), position='dodge') +
labs(title='Restaurants by borough and latest grade',
x='Borough',
y='Restaurants') +
scale_fill_brewer(palette='Set2') +
theme_bw() +
theme(legend.key=element_blank())
p <- inspections %>%
plot_ly(x = ~boro, type = 'bar',color =ratings1)
p
ggplot(data=inspections) +
geom_bar(aes(x=boro,fill=grade), position='dodge') +
labs(title='Restaurants by borough and latest grade',
x='Borough',
y='Restaurants') +
scale_fill_brewer(palette='Set2') +
theme_bw() +
theme(legend.key=element_blank())
p <- inspections %>%
plot_ly(x = ~boro, y~n,,color =grade)
p
p <- inspections %>%count(boro, grade) %>%
plot_ly(x = ~boro, y~n,color =grade)
p
p <- ggplot2::diamonds %>% count(cut, clarity) %>%
plot_ly(x = ~cut, y = ~n, color = ~clarity)
p
p <- inspections %>%count(boro, grade) %>%
plot_ly(x = ~boro, y~n,color =~grade)
p
p <- inspections %>%count(boro, grade) %>%
plot_ly(x = ~boro,y~n,color =~ratings1)
p
p <- inspections %>%count(boro, grade) %>%
plot_ly(x = ~boro,y~n,color =~ratings)
p
p <- inspections %>%count(boro, grade) %>%
plot_ly(x = ~boro,y~n,color =~grade)
p
p <- inspections %>%count(boro, grade) %>%
plot_ly(x = ~boro,y~n,fill =~grade)
p
p <- inspections %>%count(boro, grade) %>%
plot_ly(x = ~boro,y~n,fill =grade)
p
p <- inspections %>%count(boro, grade) %>%
plot_ly(x = ~boro,y~n,fill=grade)
p
p <- inspections %>%count(boro, grade) %>%
plot_ly(x = ~boro,y~n,color=grade)
p
p <- inspections %>%count(boro, grade) %>%
plot_ly(x = ~boro,y~n,color=grade)
p
ggplot(data=inspections) +
geom_bar(aes(x=boro,fill=grade), position='dodge') +
labs(title='Restaurants by borough and latest grade',
x='Borough',
y='Restaurants') +
scale_fill_brewer(palette='Set2') +
theme_bw() +
theme(legend.key=element_blank())
p <- inspections %>%count(boro, grade) %>%
plot_ly(x = ~boro,y~n)
p
p <- inspections %>%count(boro, grade) %>%
plot_ly(x=~boro,y~n)
p
p <- inspections %>%count(boro, grade) %>%
plot_ly(x=~boro)
p
shiny::runApp('~/Desktop/Project_1_shinyApp/shinyDashBoard')
plot_ly(data=inspections, x = ~factor(boro, levels=c('QUEENS','BROOKLYN','MANHATTAN','BRONX','STATEN ISLAND')),
y = ~Total, color=~factor(Boro, levels=c('QUEENS','BROOKLYN','MANHATTAN','BRONX','STATEN ISLAND')), type = 'bar', mode ='markers') %>%
layout(xaxis = list(title = "", showticklabels = TRUE),
yaxis = list(title = ""), showlegend = TRUE)
plot_ly(data=inspections, x = ~factor(boro, levels=c('QUEENS','BROOKLYN','MANHATTAN','BRONX','STATEN ISLAND')),
y = ~n, color=~factor(Boro, levels=c('QUEENS','BROOKLYN','MANHATTAN','BRONX','STATEN ISLAND')), type = 'bar', mode ='markers') %>%
layout(xaxis = list(title = "", showticklabels = TRUE),
yaxis = list(title = ""), showlegend = TRUE)
plot_ly(data=inspections, x = ~factor(boro, levels=c('QUEENS','BROOKLYN','MANHATTAN','BRONX','STATEN ISLAND')),
y = ~n, color=~factor(boro, levels=c('QUEENS','BROOKLYN','MANHATTAN','BRONX','STATEN ISLAND')), type = 'bar', mode ='markers') %>%
layout(xaxis = list(title = "", showticklabels = TRUE),
yaxis = list(title = ""), showlegend = TRUE)
plot_ly(data=inspections, x = ~factor(boro, levels=c('QUEENS','BROOKLYN','MANHATTAN','BRONX','STATEN ISLAND')),
y =~n, type = 'bar', mode ='markers') %>%
layout(xaxis = list(title = "", showticklabels = TRUE),
yaxis = list(title = ""), showlegend = TRUE)
p <- inspections %>%count(boro, grade) %>% plot_ly(x = ~factor(boro, levels=c('QUEENS','BROOKLYN','MANHATTAN','BRONX','STATEN ISLAND')),
y =~n, type = 'bar', mode ='markers') %>%
layout(xaxis = list(title = "", showticklabels = TRUE),
yaxis = list(title = ""), showlegend = TRUE)
p
ggplot(data=inspections) +
geom_bar(aes(x=boro,fill=grade), position='dodge') +
labs(title='Restaurants by borough and latest grade',
x='Borough',
y='Restaurants') +
scale_fill_brewer(palette='Set2') +
theme_bw() +
theme(legend.key=element_blank())
p <- inspections %>%count(boro, grade) %>% plot_ly(x = ~factor(boro, levels=c('QUEENS','BROOKLYN','MANHATTAN','BRONX','STATEN ISLAND')),
y =~n, type = 'bar', mode ='markers') %>%
layout(xaxis = list(title = "", showticklabels = TRUE),
yaxis = list(title = ""), showlegend = TRUE)
p
p <- inspections %>%count(boro, grade) %>% plot_ly(x = ~factor(boro, levels=c('QUEENS','BROOKLYN','MANHATTAN','BRONX','STATEN ISLAND')),
y =~n, type = 'bar', mode ='markers',color=grade) %>%
layout(xaxis = list(title = "", showticklabels = TRUE),
yaxis = list(title = ""), showlegend = TRUE)
p
p <- inspections %>%count(boro, grade) %>% plot_ly(x = ~factor(boro, levels=c('QUEENS','BROOKLYN','MANHATTAN','BRONX','STATEN ISLAND')),
y =~n, type = 'bar', color=grade) %>%
layout(xaxis = list(title = "", showticklabels = TRUE),
yaxis = list(title = ""), showlegend = TRUE)
p
p <- inspections %>%count(boro, grade) %>% plot_ly(x = ~factor(boro, levels=c('QUEENS','BROOKLYN','MANHATTAN','BRONX','STATEN ISLAND')),
y =~n, type = 'bar', color=grade) %>%
layout(xaxis = list(title = "", showticklabels = TRUE),
yaxis = list(title = ""), showlegend = TRUE)
p <- inspections %>%count(boro, grade) %>% plot_ly(x = ~factor(boro, levels=c('QUEENS','BROOKLYN','MANHATTAN','BRONX','STATEN ISLAND')),
y =~n, type = 'bar', color=~grade) %>%
layout(xaxis = list(title = "", showticklabels = TRUE),
yaxis = list(title = ""), showlegend = TRUE)
p
p <- inspections %>%count(boro, grade) %>%
plot_ly(x = ~boro,y~n,color=~grade)
p
p <- inspections %>%count(boro, grade) %>%
plot_ly(x = ~boro,y~n,type = 'bar',color=~grade)
p
p <- inspections %>%count(boro, grade) %>%
plot_ly(x = ~factor(boro),y~n,type = 'bar',color=~grade)
p
p <- inspections %>%count(boro, grade) %>%
plot_ly(x = ~factor(boro,levels=c('QUEENS','BROOKLYN','MANHATTAN','BRONX','STATEN ISLAND')),y~n,type = 'bar',color=~grade)
p
p <- inspections %>%count(boro, grade) %>%
plot_ly(x = ~factor(boro,levels=c('QUEENS','BROOKLYN','MANHATTAN','BRONX','STATEN ISLAND')),
y~n,type = 'bar',color=~grade)
p
p <- inspections %>%count(boro, grade) %>%
plot_ly(x = ~factor(boro,levels=c('QUEENS','BROOKLYN','MANHATTAN','BRONX','STATEN ISLAND')),
y~n,type = 'bar',color=~grade)
p
p <- inspections %>%count(boro, grade) %>% plot_ly(x = ~factor(boro, levels=c('QUEENS','BROOKLYN','MANHATTAN','BRONX','STATEN ISLAND')),
y =~n, type = 'bar', color=~grade) %>%
layout(xaxis = list(title = "", showticklabels = TRUE),
yaxis = list(title = ""), showlegend = TRUE)
p
p <- inspections %>%count(boro, grade) %>%
plot_ly(x = ~factor(boro,levels=c('QUEENS','BROOKLYN','MANHATTAN','BRONX','STATEN ISLAND')),
y~n,type = 'bar',color=~grade)%>%
layout(xaxis = list(title = "", showticklabels = TRUE),
yaxis = list(title = ""), showlegend = TRUE)
p
p <- inspections %>%count(boro, grade) %>%
plot_ly(x = ~factor(boro, levels=c('QUEENS','BROOKLYN','MANHATTAN','BRONX','STATEN ISLAND')),
y~n, type = 'bar',color=~grade)%>%
layout(xaxis = list(title = "", showticklabels = TRUE),
yaxis = list(title = ""), showlegend = TRUE)
p
p <- inspections %>%count(boro, grade) %>% plot_ly(x = ~factor(boro, levels=c('QUEENS','BROOKLYN','MANHATTAN','BRONX','STATEN ISLAND')),
y =~n, type = 'bar', color=~grade)%>%
layout(xaxis = list(title = "", showticklabels = TRUE),
yaxis = list(title = ""), showlegend = TRUE)
p
p <- inspections %>%count(boro, grade) %>% plot_ly(x = ~factor(boro, levels=c('QUEENS','BROOKLYN','MANHATTAN','BRONX','STATEN ISLAND')),
y =~n, type = 'bar', color=~grade) %>%
layout(xaxis = list(title = "Boro", showticklabels = TRUE),
yaxis = list(title = "Count"), showlegend = TRUE)
p
ggplot(data=inspections) +
geom_bar(aes(x=boro,fill=ratings1), position='dodge') +
labs(title='Restaurants by borough and ratings',
x='Borough',
y='Restaurants') +
scale_fill_brewer(palette='Set2') +
theme_bw() +
theme(legend.key=element_blank())
# or, different way of plottings
ggplot(data=inspections)+geom_bar(aes(x=boro,fill=ratings1))
# plotly plot
p <- inspections %>%count(boro, ratings1) %>%
plot_ly(x = ~factor(boro, levels=c('QUEENS','BROOKLYN','MANHATTAN','BRONX','STATEN ISLAND')),
y =~n, type = 'bar', color=~ratings1) %>%
layout(xaxis = list(title = "Boro", showticklabels = TRUE),
yaxis = list(title = "Count"), showlegend = TRUE)
p
cuisine_flitered <- inspections %>%
group_by(cuisine) %>%
summarise(count=n()) %>%
top_n(20, count)
View(cuisine_flitered)
View(cuisine_flitered)
cuisine_flitered <- inspections %>%
group_by(cuisine) %>%
summarise(count=n()) %>%
top_n(5, count)
View(cuisine_flitered)
View(cuisine_flitered)
cuisine_flitered <- inspections %>%
group_by(cuisine) %>%
summarise(count=n()) %>%
top_n(20, count)
cuisine_flitered <- inspections %>%
group_by(cuisine) %>%
summarise(count=n()) %>%
top_n(20, count)
cuisine_flitered <- inspections %>%
group_by(cuisine) %>%
summarise(count=n()) %>%
top_n(20, count)
inspectionsFiltered = semi_join(inspections, cuisine_flitered, by = 'cuisine')
ggplot(data=inspectionsFiltered) +
geom_bar(aes(x=reorder(cuisine, cuisine, function(x) length(x)), fill=grade), position='dodge') +
labs(title='Restaurants by cuisine and grade',
x='Cuisine',
y='Restaurants') +
scale_fill_brewer(palette='Set2') +
coord_flip() +
theme_bw() +
theme(legend.key=element_blank())
# plotly plot
p <- inspectionsFiltered %>%count(cuisine, grade) %>%
plot_ly(x = ~factor(cuisine),
y =~n, type = 'bar', color=~grade) %>%
layout(xaxis = list(title = "Boro", showticklabels = TRUE),
yaxis = list(title = "Count"), showlegend = TRUE)
p
# plotly plot
p <- inspectionsFiltered %>%count(cuisine, grade) %>%
plot_ly(x = ~n,
y =~factor(cuisine), type = 'bar', color=~grade) %>%
layout(xaxis = list(title = "Boro", showticklabels = TRUE),
yaxis = list(title = "Count"), showlegend = TRUE)
p
ggplot(data=inspectionsFiltered) +
geom_bar(aes(x=reorder(cuisine, cuisine, function(x) length(x)), fill=ratings1), position='dodge') +
labs(title='Restaurants by cuisine and ratings',
x='Cuisine',
y='Restaurants') +
scale_fill_brewer(palette='Set2') +
coord_flip() +
theme_bw() +
theme(legend.key=element_blank())
# plotly bar plots
# plotly plot
p <- inspectionsFiltered %>%count(cuisine, ratings1) %>%
plot_ly(x = ~n,
y =~factor(cuisine), type = 'bar', color=~grade) %>%
layout(xaxis = list(title = "Boro", showticklabels = TRUE),
yaxis = list(title = "Count"), showlegend = TRUE)
p
# plotly bar plots
# plotly plot
p <- inspectionsFiltered %>%count(cuisine, ratings1) %>%
plot_ly(x = ~n,
y =~factor(cuisine), type = 'bar', color=~ratings1) %>%
layout(xaxis = list(title = "Boro", showticklabels = TRUE),
yaxis = list(title = "Count"), showlegend = TRUE)
p
# Histogram on a Categorical variable
g <- ggplot(data=inspectionsFiltered, aes(boro))
g + geom_bar(aes(fill=cuisine), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Histogram on Categorical Variable",
subtitle="Manufacturer across Vehicle Classes")
pal <- c("red","blue","green","orange","yellow")
pal <- setNames(pal, c("BRONX", "BROOKLYN", "MANHATTAN","QUEENS","STATEN ISLND"))
p <- plot_ly(data = inspections, x = ~rating, y = ~score, color = ~boro, colors = pal)
p
p <- plot_ly(data = inspectionsFiltered,type = 'scatter', x = ~rating,
y = ~score, color = ~boro, colors = pal,
text = paste("Name: ",inspectionsFiltered$name,
"<br>cuisine: ",inspectionsFiltered$cuisine,
"<br>grade: ",inspectionsFiltered$grade),
hoverinfo = 'text',
mode = 'markers')
p
p <- plot_ly(data = inspections, x = ~rating, y = ~score, color = ~boro, colors = pal)
p <- plot_ly(data = inspections, x = ~rating, y = ~score, color = ~boro, colors = pal)
p
p <- plot_ly(data = inspections,type = 'scatter', x = ~rating,
y = ~score, color = ~boro, colors = pal,
text = paste("Name: ",inspectionsFiltered$name,
"<br>cuisine: ",inspectionsFiltered$cuisine,
"<br>grade: ",inspectionsFiltered$grade),
hoverinfo = 'text',
mode = 'markers')
p
p <- plot_ly(data = inspections, x = ~rating, y = ~score, color = ~boro, colors = pal)
p
p <- plot_ly(data = inspections, x = ~rating, y = ~score, color = ~boro, colors = pal)
p
p <- plot_ly(data = inspections, x = ~rating, y = ~score, color = ~boro,
colors = pal,text = paste("Name: ",inspectionsFiltered$name,
"<br>cuisine: ",inspectionsFiltered$cuisine,
"<br>grade: ",inspectionsFiltered$grade),
hoverinfo = 'text',
mode = 'markers')
p
p <- plot_ly(data = inspections, x = ~rating, y = ~score, color = ~boro,
colors = pal,text = paste("Name: ",inspections$name,
"<br>cuisine: ",inspections$cuisine,
"<br>grade: ",inspections$grade),
hoverinfo = 'text',
mode = 'markers')
p
p <- plot_ly(data = inspections,type = 'scatter', x = ~rating,
y = ~score, color = ~boro, colors = pal,
text = paste("Name: ",inspections$name,
"<br>cuisine: ",inspections$cuisine,
"<br>grade: ",inspections$grade),
hoverinfo = 'text',
mode = 'markers')
p
runApp('~/Desktop/Project_1_shinyApp/shinyDashBoard')
View(yelp.df)
View(yelp_insp)
View(yelp_insp)
runApp('~/Desktop/Project_1_shinyApp/shinyDashBoard')
runApp('~/Desktop/Project_1_shinyApp/shinyDashBoard')
runApp('~/Desktop/Project_1_shinyApp/shinyDashBoard')
shiny::runApp()
runApp()
View(yelp_insp_data)
View(yelp_insp_data)
shiny::runApp()
shiny::runApp()
install.packages('leaflet.extras')
runApp()
shiny::runApp()
yelp_insp_data %>% group_by(boro,grade) %>% summarise(Count=n())
count.boro
count.boro %>%
filter_(ifelse(input$boro1=="ALL",'boro %in% unique(count.boro$boro)','boro==input$boro1')) %>%
group_by(grade) %>%
summarise(Total=sum(Count))
# plotly plot
p <- inspections %>%count(boro, grade) %>% plot_ly(x = ~factor(boro, levels=c('QUEENS','BROOKLYN','MANHATTAN','BRONX','STATEN ISLAND')),
y =~n, type = 'bar', color=~grade) %>%
layout(xaxis = list(title = "Boro", showticklabels = TRUE),
yaxis = list(title = "Count"), showlegend = TRUE)
# plotly plot
p <- inspections %>%count(boro, grade) %>% plot_ly(x = ~factor(boro, levels=c('QUEENS','BROOKLYN','MANHATTAN','BRONX','STATEN ISLAND')),
y =~n, type = 'bar', color=~grade) %>%
layout(xaxis = list(title = "Boro", showticklabels = TRUE),
yaxis = list(title = "Count"), showlegend = TRUE)
p
runApp()
count.cuisine
count.cuisine <- yelp_insp_data %>% group_by(cuisine,grade) %>% summarise(Count=n())
count.cuisine
choice3 <- c('ALL',unique(yelp_insp_data$cuisine))
choice3
runApp()
runApp()
c('ALL',unique(yelp_insp_data$cuisine)) %>% top_n(15, count)
runApp()
runApp()
c('ALL',unique(count.cuisine$cuisine))
count.cuisine <- yelp_insp_data %>% group_by(cuisine,grade) %>% summarise(Count=n()) %>% top_n(15, Count)
c('ALL',unique(count.cuisine$cuisine))
yelp_insp_data %>% group_by(cuisine,grade) %>% summarise(Count=n()) %>% top_n(15, Count)
yelp_insp_data %>% group_by(cuisine,grade) %>% summarise(Count=n()) %>% top_n(15)
yelp_insp_data %>% group_by(cuisine) %>% summarise(Count=n()) %>% top_n(15, Count)
yelp_insp_data %>% group_by(cuisine) %>% summarise(Count=n()) %>% top_n(15)
runApp()
yelp_insp_data %>% group_by(cuisine,grade) %>% summarise(Count=n())
count.cuisine %>%
filter_(ifelse(input$cuisine1=="ALL",'cuisine %in% unique(count.cuisine$cuisine)','cuisine==input$cuisine1')) %>%
group_by(cuisine,grade) %>%
summarise(Total=sum(Count))
count.cuisine
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp('~/Downloads/Shiny-master')
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
